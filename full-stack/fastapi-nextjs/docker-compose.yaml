configs:
  prometheus-config:
    file: ./prometheus.yaml

networks:
  backend:
  frontend:

volumes:
  grafana:
  grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./grafana_data
  postgres_data:
  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data

services:

  postgres:
    image: postgres:alpine-16.2
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USERNAME=postgres-12345
      - POSTGRES_PASSWORD=secret-12345
      - POSTGRES_DATABASE=postgres
    networks:
      - backend
    ports:
      - 5454:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    networks:
      - backend

  backend:
    depends_on:
      - postgres
      - redis
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/dbname  # Update with your PostgreSQL connection details
      - REDIS_URL=redis://redis:6379/
    networks:
      - backend
    ports:
      - "8000:8000"

  frontend:
    depends_on:
      - backend
      - frontend
    build:
      context: ./frontend  # Path to your Next.js frontend code
      dockerfile: Dockerfile
    networks:
      - backend
      - frontend
    ports:
      - "8080:8080"

  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: prometheus
    configs:
      - source: prometheus-config
        target: /etc/prometheus.yml
        mode: 444
    ports:
      - 9090:9090
    volumes:
      - ./prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:11.1.1
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/:/etc/grafana/
      - ./grafana_data:/var/lib/grafana/
